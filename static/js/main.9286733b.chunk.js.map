{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","utils/todosFiltering.ts","index.tsx"],"names":["TodoList","todos","getActiveTodo","activeTodo","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","selectedFilterValue","setSelectedFilterValue","setSearchValue","searchValue","clear","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","closeDetails","userId","useState","isLoaded","setIsLoaded","email","name","phone","selectedUser","setSelectedUser","useEffect","getUser","user","catch","error","href","App","todosFromServer","setTodosFromServer","selectedTodo","setSelectedTodo","setError","errorMessage","finally","todosAfterSelect","useMemo","filter","todosAfterSearch","trim","length","toLowerCase","includes","color","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9286733b.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  getActiveTodo: (todo: Todo) => void;\n  activeTodo: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = (\n  {\n    todos,\n    getActiveTodo,\n    activeTodo,\n  },\n) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n    <tbody>\n      {\n        todos.map((todo) => (\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed\n                && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames(\n                  {\n                    'has-text-success': todo.completed,\n                    'has-text-danger': !todo.completed,\n                  },\n                )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => getActiveTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far',\n                    {\n                      'fa-eye': todo.id !== activeTodo?.id,\n                      'fa-eye-slash': todo.id === activeTodo?.id,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))\n      }\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ntype Props = {\n  selectedFilterValue: string,\n  setSelectedFilterValue: (completed: string) => void,\n  setSearchValue: (completed: string) => void,\n  searchValue: string,\n  clear: () => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  selectedFilterValue,\n  setSelectedFilterValue,\n  setSearchValue,\n  searchValue,\n  clear,\n}) => {\n  const handlerChangeSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedFilterValue(event.target.value);\n  };\n\n  const handlerChangeSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedFilterValue}\n            onChange={handlerChangeSelect}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchValue}\n          onChange={handlerChangeSearch}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {searchValue && (\n          <span\n            className=\"icon is-right\"\n            style={{ pointerEvents: 'all' }}\n          >\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => clear()}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo,\n  closeDetails: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, closeDetails }) => {\n  const {\n    id,\n    userId,\n    completed,\n    title,\n  } = todo;\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [selectedUser, setSelectedUser] = useState<User>({\n    email: '',\n    id: 0,\n    name: '',\n    phone: '',\n  });\n\n  useEffect(() => {\n    getUser(userId)\n      .then(user => {\n        setSelectedUser(user);\n        setIsLoaded(true);\n      })\n      .catch(error => `${error}`);\n  }, [userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!isLoaded ? (\n        <Loader />\n      )\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                Todo #\n                {id}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => {\n                  closeDetails();\n                }}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n                {' by '}\n\n                <a href={selectedUser.email}>\n                  {selectedUser.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { filteringBySearch, filteringBySelect } from './utils/todosFiltering';\n\nexport const App: React.FC = () => {\n  const [todosFromServer, setTodosFromServer] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [selectedFilterValue, setSelectedFilterValue] = useState('all');\n  const [searchValue, setSearchValue] = useState('');\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(todos => {\n        setTodosFromServer(todos);\n        setIsLoaded(true);\n      })\n      .catch(errorMessage => setError(`smth happens - ${errorMessage}`))\n      .finally(() => setIsLoaded(true));\n  }, []);\n  const getActiveTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const todosAfterSelect = useMemo(() => {\n    return filteringBySelect(todosFromServer, selectedFilterValue);\n  }, [todosFromServer, selectedFilterValue]);\n\n  const todosAfterSearch = useMemo(() => {\n    return filteringBySearch(todosAfterSelect, searchValue);\n  }, [searchValue, todosAfterSelect]);\n\n  const closeDetails = () => {\n    setSelectedTodo(null);\n  };\n\n  const clearSearch = () => {\n    setSearchValue('');\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selectedFilterValue={selectedFilterValue}\n                setSelectedFilterValue={setSelectedFilterValue}\n                setSearchValue={setSearchValue}\n                searchValue={searchValue}\n                clear={clearSearch}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!isLoaded && <Loader />}\n              <TodoList\n                todos={todosAfterSearch}\n                getActiveTodo={getActiveTodo}\n                activeTodo={selectedTodo}\n              />\n            </div>\n            {error && (\n              <span style={{ color: 'red' }}>\n                {error}\n              </span>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          closeDetails={closeDetails}\n        />\n      )}\n    </>\n  );\n};\n","import { Todo } from '../types/Todo';\n\nexport const filteringBySelect = (todos: Todo[], value: string) => {\n  return todos.filter(todo => {\n    switch (value) {\n      case 'completed':\n        return todo.completed;\n      case 'active':\n        return !todo.completed;\n      default:\n        return true;\n    }\n  });\n};\n\nexport const filteringBySearch = (todos: Todo[], value: string) => {\n  if (!value.trim().length) {\n    return todos;\n  }\n\n  return todos.filter((todo) => {\n    return todo.title.toLowerCase().includes(value.toLowerCase());\n  });\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}